#!/bin/bash

# CUR_DIR=$(dirname $(readlink -f $0)) # Get absolute path
CUR_DIR=$(dirname $0) # Get relative path
TOP_DIR=$CUR_DIR/..
UNITTEST_DIR=$TOP_DIR/app/unittest
RELEASE_DOC_DIR=$TOP_DIR/release/docs
RELEASE_DOC_DOXYGEN_DIR=$RELEASE_DOC_DIR/doxygen
RELEASE_DOC_SPHINX_DIR=$RELEASE_DOC_DIR/sphinx

source $TOP_DIR/scripts/log.sh

# --------------------------------------------------------------------------- #
# Function
# --------------------------------------------------------------------------- #

# $1: parameter to be parsed
parse_param()
{
	local key=${1%%=*}
	local value=${1#*=}

	if [[ "$key" = "doxygen" ]] || [[ "$key" = "sphinx" ]] || 
		[[ "$key" = "clean" ]]; then
		BUILD=$key
	fi
}

doc_doxygen_preprocess()
{
	local file1=$UNITTEST_DIR/test_*.c
	local file2=$UNITTEST_DIR/vendor/*.c

	for item in $file1; do
		cp $item ${item/.c/.cc}
	done
	for item in $file2; do
		cp $item ${item/.c/.cc}
	done
}

doc_doxygen_postprocess()
{
	rm $UNITTEST_DIR/test_*.cc
	rm $UNITTEST_DIR/vendor/*.cc
}

doc_doxygen()
{
	local project="module lib app/unittest"
	local cfg_dir=$CUR_DIR/doxygen

	NOTICE "Generate doxygen documents...\$"
	doc_doxygen_preprocess
	for item in $project; do
		mkdir -p $RELEASE_DOC_DOXYGEN_DIR/$item
		doxygen $cfg_dir/${item}.conf
	done
	doc_doxygen_postprocess
}

doc_sphinx()
{
	local src_dir=$CUR_DIR/rst

	NOTICE "Generate sphinx documents...\$"
	mkdir -p $RELEASE_DOC_SPHINX_DIR
	sphinx-build -b html $src_dir $RELEASE_DOC_SPHINX_DIR
}

doc_clean()
{
	rm -r $RELEASE_DOC_DIR
}

# --------------------------------------------------------------------------- #
# Default
# --------------------------------------------------------------------------- #
BUILD=all

# --------------------------------------------------------------------------- #
# Execute
# --------------------------------------------------------------------------- #

for arg in $@ ; do
	parse_param $arg
done

if [[ "$BUILD" = "all" ]]; then
	doc_doxygen
	doc_sphinx
elif [[ "$BUILD" = "doxygen" ]]; then
	doc_doxygen
elif [[ "$BUILD" = "sphinx" ]]; then
	doc_sphinx
elif [[ "$BUILD" = "clean" ]]; then
	doc_clean
fi
